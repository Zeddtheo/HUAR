cmake_minimum_required(VERSION 3.10)

project(HUAR)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED On)

include_directories(${PROJECT_SOURCE_DIR}/include)
# Add the source files
set(SOURCES
    src/jWindow.cpp
    src/jPipeline.cpp
    src/jApp.cpp
    src/jDevice.cpp
    src/jSwapchain.cpp
    src/jModel.cpp
    src/main.cpp
)
# Set the path to the shaders
set(GLSLC_EXECUTABLE "C:/MISC/library/vulkan/Bin/glslc.exe")
set(VERT_SHADER_DIR ${PROJECT_SOURCE_DIR}/shaders/simple_shader.vert)
set(FRAG_SHADER_DIR ${PROJECT_SOURCE_DIR}/shaders/simple_shader.frag)
set(VERT_SHADER_SPV ${PROJECT_SOURCE_DIR}/shaders/simple_shader.vert.spv)
set(FRAG_SHADER_SPV ${PROJECT_SOURCE_DIR}/shaders/simple_shader.frag.spv)

add_custom_command(
    OUTPUT ${VERT_SHADER_SPV}
    COMMAND ${GLSLC_EXECUTABLE} ${VERT_SHADER_DIR} -o ${VERT_SHADER_SPV}
    DEPENDS ${VERT_SHADER_DIR}
    COMMENT "Compiling vertex shader"
)

add_custom_command(
    OUTPUT ${FRAG_SHADER_SPV}
    COMMAND ${GLSLC_EXECUTABLE} ${FRAG_SHADER_DIR} -o ${FRAG_SHADER_SPV}
    DEPENDS ${FRAG_SHADER_DIR}
    COMMENT "Compiling fragment shader"
)

add_custom_target(
    CompileShaders ALL
    DEPENDS ${VERT_SHADER_SPV} ${FRAG_SHADER_SPV}
)

find_package(fmt CONFIG REQUIRED)
find_package(glm CONFIG REQUIRED)
find_package(glfw3 CONFIG REQUIRED)
find_package(vulkan REQUIRED)

add_executable(${PROJECT_NAME} ${SOURCES})   

target_link_libraries(${PROJECT_NAME} PRIVATE fmt::fmt glm::glm glfw Vulkan::Vulkan)